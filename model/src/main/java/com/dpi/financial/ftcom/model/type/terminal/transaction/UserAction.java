package com.dpi.financial.ftcom.model.type.terminal.transaction;

import com.dpi.financial.ftcom.model.type.IEnumFieldValue;
import com.dpi.financial.ftcom.utility.atm.journal.ATMConstant;
import com.dpi.financial.ftcom.utility.exception.model.TypeNotFoundException;

/**
 * Created by h.mohammadi on 9/14/2016.
 */
public enum UserAction implements IEnumFieldValue<String> {
    TRANSACTION_START("TRANSACTION START", "Save previous transaction on start transaction."),
    TRACK_DATA("TRACK DATA", "Read magnetic card track data and save it in swipe card information."),
    PIN_ENTERED("PIN ENTERED", "Clear any information & amount entered."),
    INFORMATION_ENTERED("INFORMATION ENTERED", ""),
    AMOUNT_ENTERED("AMOUNT ENTERED", ""),
    TRANSACTION_REQUEST("TRANSACTION REQUEST", "Create new transaction request object, save all information in that and clear all information & amount entered."),
    // COMMUNICATION_ERROR("COMMUNICATION ERROR", ""),
    // COMMUNICATION_OFFLINE("COMMUNICATION OFFLINE", ""),
    TRANSACTION_REPLY("TRANSACTION REPLY", ""),
    RECEIPT("RECEIPT", ""),
    CASH_REQUEST("CASH REQUEST", ""),
    CASH("CASH", ""),
    CARD_TAKEN("CARD TAKEN", ""),
    CASH_PRESENTED("CASH PRESENTED", ""),
    CASH_TAKEN("CASH TAKEN", ""),
    CASH_RETRACTED("CASH RETRACTED", ""),
    TRANSACTION_END("TRANSACTION END", "Finalize current transaction and set state to final."),
    TERMINAL_MESSAGE("TERMINAL MESSAGE", ""),
    CARD_RETAINED("CARD RETAINED", ""),
    // CARD_JAMMED("CARD JAMMED", ""),
    NO_ACTION("NO ACTION", "Do no action and continue."),
    NOT_DEFINED("NOT DEFINED", "This is not a valid value. This is default value for new rows generated by system."),

    /*
    TRACK_DATA("TD"),
    PIN_ENTERED("PE"),
    AMOUNT_ENTERED("AE"),
    INFORMATION_ENTERED("IE"),

    TRANSACTION_END("TE"),
    INTERACTIVE_TRANSACTION_REPLY(""),
    DOCUMENTS_TAKEN(""),
    ENVELOPE_DEPOSITED(""),
    TRANSACTION_FAILED(""),
    WRONG_PIN_ENTERED(""),
    REJECT_CASSETTE_FULL(""),
    CASH_RETRACTED(""),
    APPLICATION_STARTED(""),
    COMMUNICATION_NOT_STARTED(""),
    SOP_SHUTDOWN_REQUEST(""),
    CASH_COUNTERS_BEFORE_SOP(""),
    CASH_COUNTERS_AFTER_SOP(""),
    CASH_COUNTERS(""),
    DEVIC_STATUS_SUPPLY(""),
    UPS_ACTIVE(""),
    UPS_DEACTIVE(""),
    SUPPLY_COUNTERS(""),
    */;

    private final String userAction;
    private final String description;

    UserAction(String userAction, String description) {
        this.userAction = userAction;
        this.description = description;
    }

    public static UserAction getInstance(String value) {
        if (value == null || value.isEmpty())
            return null;

        for (UserAction userAction : values()) {
            if (userAction.getValue().equals(value))
                return userAction;
        }

        throw new TypeNotFoundException(UserAction.class.getName()
                + " Error creating instance for terminal transaction state: " + value);
    }

    @Override
    public String getValue() {
        return this.userAction;
    }

    @Override
    public String getFullName() {
        return this.getClass().getName() + "." + this.name();
    }

    public String getDescription() {
        return description;
    }
}
